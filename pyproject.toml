[project]
name = "ml-movie-recommender"
version = "0.1.0"
description = "Content-based movie recommender using public movie API. It shows similar movies to the ones you like."
authors = [
    "UPB-MLOps <jgomezja@unal.edu.co>",
]
requires-python = ">=3.11"
readme = "README.md"

dependencies = [
    "loguru>=0.7.3",
    "pydantic>=2.11.5",
    "python-dateutil>=2.9.0.post0",
    "pytz>=2025.2",
    "scikit-learn>=1.6.1",
    "types-requests>=2.32.0.20250602",
]

[project.urls]
documentation = "https://juan-gomezj4.github.io/ml-movie-recommender"
repository = "https://github.com/juan-gomezj4/ml-movie-recommender"


[dependency-groups]
dev = [
    "pre-commit>=4.2.0", # Code linting and formatting
    "pytest>=8.3.5", # Testing framework
    "pytest-cookies>=0.7.0",
    "pytest-cov>=6.1.1",
    "cruft[pyproject]>=2.15.0", # Automated Cookiecutter template synchronization
    "ipykernel>=6.29.5",
    "jupyterlab>=4.4.2",
    "pandas>=2.2.3",
    "pyarrow>=20.0.0",
    "loguru>=0.7.3",
    "omegaconf>=2.3.0",
    "ruff>=0.11.9",
    "dotenv>=0.9.9",
    "scipy>=1.15.3",
    "statsmodels>=0.14.4",
    "matplotlib>=3.10.3",
    "plotly>=6.1.2",
]

#
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.49",
    "mkdocstrings[python]>=0.28.1",
    "pymdown-extensions>=10.14.3",
]
#

[tool.uv]
package = false
default-groups = [
    "dev",
#
    "docs",
#
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.run]
source = ["src"]
omit = ["**/__init__.py"]

[tool.ruff]
target-version = "py311"

[tool.mypy]
python_version = "3.11"


